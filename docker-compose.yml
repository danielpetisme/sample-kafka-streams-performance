---
version: '3.5'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "9999:9999"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: localhost
      # for 5.4.x:
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*

  broker:
    image: confluentinc/cp-kafka:7.0.1
    hostname: broker
    container_name: broker
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
      - "10000:10000"
    environment:
      KAFKA_JMX_PORT: 10000
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://:9092,PLAINTEXT_HOST://:29092
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: EXTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: 'false'

  producer:
    build: ./producer
    ports:
      - "8083:8083"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "broker:9092"
      KAFKA_CLIENT_ID: "producer"
      INPUT_TOPIC: "input"
      MESSAGE_BACKOFF_MS: 10
      REPLICATION_FACTOR: 1
      NUMBER_OF_PARTITIONS: 1
      PROMETHEUS_PORT: 8083
    depends_on:
      - broker        

  streams1:
    build: ./streams
    ports:
      - "8081:8081"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "broker:9092"
      APPLICATION_ID: "streams1"
      INPUT_TOPIC: "input"
      OUTPUT_TOPIC: "output-streams1"      
      REPLICATION_FACTOR: 1
      NUMBER_OF_PARTITIONS: 1
      PROMETHEUS_PORT: 8081
    depends_on:
      - broker

  streams-with-external-call:
    build: ./streams-with-external-call
    ports:
      - "8080:8080"
    environment:
      KAFKA_STREAMS_SAMPLESTREAMS_PROPERTIES_BOOTSTRAP_SERVERS: "broker:9092"
    depends_on:
      - broker    

  kafka-lag-exporter:
    image: lightbend/kafka-lag-exporter
    hostname: kafka-lag-exporter
    restart: always
    ports:
      - 9990:9999
    volumes:
      - ./kafka-lag-exporter/:/opt/docker/conf/

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    # environment:
    #   GF_AUTH_ANONYMOUS_ENABLED: "true"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning